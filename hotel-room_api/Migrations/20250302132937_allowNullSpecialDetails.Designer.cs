// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hotel_room_api.Data;

#nullable disable

namespace hotel_room_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250302132937_allowNullSpecialDetails")]
    partial class allowNullSpecialDetails
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("hotel_room_api.Models.BedNumber", b =>
                {
                    b.Property<int>("bedNo")
                        .HasColumnType("int");

                    b.Property<DateOnly>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("UpdatedDate")
                        .HasColumnType("date");

                    b.Property<string>("specialDetails")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("bedNo");

                    b.HasIndex("RoomId");

                    b.ToTable("BedNumbers");
                });

            modelBuilder.Entity("hotel_room_api.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfBeds")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int>("SpaceByMiter")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("updatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenity = "Free WiFi, Air Conditioning, Smart TV, Mini Bar",
                            Details = "A luxurious room with a king-sized bed and a stunning city view.",
                            ImageUrl = "https://example.com/images/deluxe-king.jpg",
                            Name = "Deluxe King Room",
                            NumberOfBeds = 1,
                            Rate = 250,
                            SpaceByMiter = 35,
                            createdDate = new DateTime(2024, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Amenity = "Free WiFi, Kitchenette, Air Conditioning, Smart TV",
                            Details = "Spacious suite ideal for families, featuring two bedrooms and a living area.",
                            ImageUrl = "https://example.com/images/family-suite.jpg",
                            Name = "Family Suite",
                            NumberOfBeds = 3,
                            Rate = 400,
                            SpaceByMiter = 60,
                            createdDate = new DateTime(2024, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Amenity = "Free WiFi, Work Desk, Air Conditioning, Smart TV",
                            Details = "A comfortable room with two twin beds, perfect for business travelers.",
                            ImageUrl = "https://example.com/images/standard-twin.jpg",
                            Name = "Standard Twin Room",
                            NumberOfBeds = 2,
                            Rate = 180,
                            SpaceByMiter = 28,
                            createdDate = new DateTime(2024, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Amenity = "Private Butler, Jacuzzi, Free WiFi, Smart TV, Mini Bar",
                            Details = "An exclusive suite with a private lounge, a king-sized bed, and personalized service.",
                            ImageUrl = "https://example.com/images/presidential-suite.jpg",
                            Name = "Presidential Suite",
                            NumberOfBeds = 1,
                            Rate = 800,
                            SpaceByMiter = 100,
                            createdDate = new DateTime(2024, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Amenity = "Free WiFi, Work Desk, Air Conditioning",
                            Details = "A budget-friendly room with essential amenities for a comfortable stay.",
                            ImageUrl = "https://example.com/images/economy-room.jpg",
                            Name = "Economy Room",
                            NumberOfBeds = 1,
                            Rate = 120,
                            SpaceByMiter = 20,
                            createdDate = new DateTime(2024, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("hotel_room_api.Models.BedNumber", b =>
                {
                    b.HasOne("hotel_room_api.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });
#pragma warning restore 612, 618
        }
    }
}
